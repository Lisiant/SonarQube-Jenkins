plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "5.1.0.4882"

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


	// JSP dependencies
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'   // For JSP rendering
	implementation 'javax.servlet:jstl:1.2'


	implementation 'org.modelmapper:modelmapper:2.4.0'

	// Spring Boot Actuator - 취약한 버전
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.0.0.RELEASE'
	// Jackson Databind - 취약한 버전
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.6'

	// Spring Security - 취약한 버전
	implementation 'org.springframework.security:spring-security-core:5.2.0.RELEASE'

	// Tomcat Embed - 취약한 버전
	implementation 'org.apache.tomcat.embed:tomcat-embed-core:9.0.0.M1'
}

tasks.named('test') {
	useJUnitPlatform()
}
sonarqube {
	properties {
		property "sonar.projectKey", "sonarqube.demo"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "squ_8372cf573e18ebd36880b55ac3ab9e619dab2dda"
	}
}
